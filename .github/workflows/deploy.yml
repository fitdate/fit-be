name: Deploy Backend Application

on:
  push:
    branches: [main, develop]
    paths:
      - '**'
      - '.github/workflows/**'
      - '!frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      BLUE_PORT: 3000
      GREEN_PORT: 3001

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: Node.js 설정
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: 의존성 설치
        run: npm ci # npm install 대신 npm ci 사용

      - name: SSH 키 설정
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: 환경 설정
        run: |
          mkdir -p ~/.ssh
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          echo "${{ secrets.ENV_FILE }}" > .env

      - name: 블루/그린 배포
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
        run: |
          # 현재 실행 중인 포트 확인
          CURRENT_PORT=$(ssh $USERNAME@$HOST "curl -s localhost/port || echo $BLUE_PORT")

          # 배포 환경 설정
          if [ "$CURRENT_PORT" = "$BLUE_PORT" ]; then
            NEW_PORT=$GREEN_PORT
            NEW_ENV=green
            CURRENT_ENV=blue
          else
            NEW_PORT=$BLUE_PORT
            NEW_ENV=blue
            CURRENT_ENV=green
          fi

          echo "현재 환경: $CURRENT_ENV (포트: $CURRENT_PORT)"
          echo "배포 대상 환경: $NEW_ENV (포트: $NEW_PORT)"

          # 배포 디렉토리 생성
          ssh $USERNAME@$HOST "mkdir -p ~/fit-$NEW_ENV"

          # 파일 전송 및 배포
          scp -r ./* .env $USERNAME@$HOST:~/fit-$NEW_ENV

          # 원격 서버 배포 스크립트 실행
          ssh $USERNAME@$HOST "
            cd ~/fit-$NEW_ENV && \
            npm ci && \
            npm run build && \
            pm2 delete fit-$NEW_ENV 2>/dev/null || true && \
            APP_PORT=$NEW_PORT pm2 start dist/main.js --name fit-$NEW_ENV --time && \
            sudo rm -f /etc/nginx/sites-enabled/fit-$CURRENT_ENV && \
            sudo ln -sf /etc/nginx/sites-available/fit-$NEW_ENV /etc/nginx/sites-enabled/ && \
            sudo nginx -t && \
            sudo systemctl reload nginx && \
            sleep 5 && \
            pm2 delete fit-$CURRENT_ENV 2>/dev/null || true && \
            echo \"배포 완료: $NEW_ENV 환경 (포트: $NEW_PORT)\"
          "
