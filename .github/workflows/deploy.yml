name: Deploy Backend Application

on:
  push:
    branches: [main, develop]
    paths:
      - '**.ts'
      - 'package*.json'
      - 'tsconfig*.json'
      - '.env.example'
      - 'nest-cli.json'
      - '.github/workflows/**'
      - 'Dockerfile'
      - 'nginx-config/**'
      - 'docker-compose.yml'
      - '!frontend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 📦 코드 체크아웃
      - name: 📦 Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # 🔧 Node.js 설정
      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      # 🔑 SSH 키 설치
      - name: 🔑 Install SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # 🔐 SSH 설정 및 테스트
      - name: 🔐 Configure SSH and Test Connection
        run: |
          # SSH 디렉토리 생성 및 권한 설정
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # SSH 키 파일 생성
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/fit-key.pem
          chmod 600 ~/.ssh/fit-key.pem

          # SSH 설정 파일 생성
          cat > ~/.ssh/config << EOL
          Host ${{ secrets.DB_HOST }}
            User ubuntu
            IdentityFile ~/.ssh/fit-key.pem
            StrictHostKeyChecking no
            ServerAliveInterval 30
            LogLevel DEBUG3
          EOL
          chmod 600 ~/.ssh/config

          # 디버깅 정보 출력
          echo "=== SSH Debug Info ==="
          echo "Current directory: $(pwd)"
          echo "Home directory: $HOME"
          echo "SSH directory contents:"
          ls -la ~/.ssh/
          echo "SSH Key exists: $(ls -la ~/.ssh/fit-key.pem)"
          echo "SSH Key permissions: $(stat -c %a ~/.ssh/fit-key.pem)"
          echo "SSH Key first line: $(head -n 1 ~/.ssh/fit-key.pem)"
          echo "SSH Key last line: $(tail -n 1 ~/.ssh/fit-key.pem)"
          echo "SSH Config contents:"
          cat ~/.ssh/config
          echo "=== Testing SSH Connection ==="

          # SSH 연결 테스트 (상세 로깅)
          ssh -vvv -i ~/.ssh/fit-key.pem ubuntu@${{ secrets.DB_HOST }} "echo 'SSH connection successful' || echo 'SSH connection failed'"

          # 연결 실패 시 추가 정보 수집
          if [ $? -ne 0 ]; then
            echo "=== Additional Debug Info ==="
            echo "Host: ${{ secrets.DB_HOST }}"
            echo "User: ubuntu"
            echo "SSH version: $(ssh -V)"
            echo "=== End Debug Info ==="
          fi
